name: Deploy
on:
  workflow_call:
    inputs:
      ENVIRONMENT:
        required: true
        type: string
      TEST:
        required: false
        type: string
env:
  IS_TAG: ${{ startsWith(github.ref, 'refs/tags/') }}
jobs:
  checkImageExistsJob:
    runs-on: ubuntu-latest
    environment: ${{ inputs.ENVIRONMENT }}
    permissions:
      statuses: read
      actions: write
    outputs:
      hasImage: ${{ steps.image-status-check.outputs.hasImage }}
      aws-role: ${{ vars.TEST_VAR }}
    steps:
      - name: Check image status
        id: image-status-check
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          has_image='false'
          IFS=$'\n'
          arr=($(gh api \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/${{ github.repository }}/commits/${{ github.ref_name }}/statuses \
            | jq -c '.[] | [.context, .state]'))
          for row in ${arr[@]}; do
            if [[ $(echo $row | jq -r '.[0]') == "BuildImage" && $(echo $row | jq -r '.[1]') == "success" ]]; then
              has_image='true'
            fi
          done
          echo "hasImage=$has_image" >> $GITHUB_OUTPUT
      - name: Checkout source code
        if: ${{ env.IS_TAG && steps.image-status-check.outputs.hasImage != 'true' }}
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}
      - name: Output error summary and remove tag
        if: ${{ env.IS_TAG && steps.image-status-check.outputs.hasImage != 'true' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "### This commit's image is not ready for deploy" >> $GITHUB_STEP_SUMMARY
          git push --delete origin ${{ github.ref_name }}
          echo "Remove tag ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          gh run cancel ${{ github.run_id }}
          gh run watch ${{ github.run_id }}
  deployJob:
    runs-on: ubuntu-latest
    needs: checkImageExistsJob
    if: ${{ needs.checkImageExistsJob.outputs.hasImage == 'true' }}
    concurrency: deploy-${{ inputs.ENVIRONMENT }}-group
    steps:
      - name: Deploy ${{ inputs.ENVIRONMENT }}
        if: ${{ inputs.ENVIRONMENT }} == 'dev'
        id: deploy-step
        run: |
          echo "success"
          echo ${{ needs.checkImageExistsJob.outputs.aws-role }}
          echo "OK"
          echo ${{ vars.TEST_VAR }}
          echo "OK2"
      - name: Deploy ${{ inputs.ENVIRONMENT }} - ifnot
        if: ${{ inputs.ENVIRONMENT }} != 'dev'
        id: deploy-step2
        run: |
          echo "success"
          echo ${{ needs.checkImageExistsJob.outputs.aws-role }}
          echo "OK"
          echo ${{ vars.TEST_VAR }}
          echo "OK2"
